plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'maven-publish'
    id 'jacoco'
}

android {
    namespace 'com.ustadmobile.meshrabiya'
    compileSdk 35

    defaultConfig {
        minSdk 26
        targetSdk 35

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            useJUnitPlatform()
        }
    }

    packagingOptions {
        pickFirst "**/LICENSE.md"
        pickFirst "**/LICENSE.txt"
        pickFirst "**/LICENSE"
        pickFirst "**/LICENSE-notice.md"
        pickFirst "**/NOTICE.txt"
        pickFirst "**/NOTICE"
        pickFirst "**/NOTICE.md"
        pickFirst "META-INF/LICENSE.md"
        pickFirst "META-INF/LICENSE.txt"
        pickFirst "META-INF/LICENSE"
        pickFirst "META-INF/LICENSE-notice.md"
        pickFirst "META-INF/NOTICE.txt"
        pickFirst "META-INF/NOTICE"
        pickFirst "META-INF/NOTICE.md"
    }

    publishing {
        singleVariant("release") {
            // Optional: further configuration
        }
    }
}

// JaCoCo configuration for comprehensive test coverage
jacoco {
    toolVersion = "0.8.10"
}

tasks.register('jacocoTestReport', JacocoReport) {
    dependsOn 'testDebugUnitTest'
    
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    
    def fileFilter = [
        '**/R.class',
        '**/R$*.class',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*Test*.*',
        'android/**/*.*',
        '**/beta/**/*.*' // Exclude beta logging from coverage (opt-in feature)
    ]
    
    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"
    def kotlinSrc = "${project.projectDir}/src/main/kotlin"
    
    sourceDirectories.setFrom(files([mainSrc, kotlinSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: buildDir, includes: [
        'outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec'
    ]))
}

dependencies {
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib:1.9.25") {
            because "Force Kotlin 1.9.25 to avoid version conflicts"
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.25") {
            because "Force Kotlin 1.9.25 to avoid version conflicts"
        }
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3") {
            because "Use coroutines compatible with Kotlin 1.9.25"
        }
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3") {
            because "Use coroutines compatible with Kotlin 1.9.25"
        }
        implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3") {
            because "Use serialization compatible with Kotlin 1.9.25"
        }
        implementation("org.jetbrains.kotlinx:kotlinx-serialization-core:1.6.3") {
            because "Use serialization compatible with Kotlin 1.9.25"
        }
    }
    
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.appcompat:appcompat:1.7.1"
    implementation "com.athaydes.rawhttp:rawhttp-core:2.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3"
    implementation "androidx.datastore:datastore-preferences:1.1.7"

    implementation "org.bouncycastle:bcprov-jdk18on:1.75"
    implementation "org.bouncycastle:bcpkix-jdk18on:1.75"

    implementation "com.github.seancfoley:ipaddress:5.4.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"

    implementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlin:kotlin-test:1.9.25"

//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"
//    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$version_kotlinx_serialization"
    implementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
    implementation "app.cash.turbine:turbine:0.12.1"
    implementation "com.squareup.okhttp3:mockwebserver:4.10.0"
    implementation "com.squareup.okhttp3:okhttp:4.10.0"


    testImplementation("org.robolectric:robolectric:4.11.1")
    testImplementation "io.mockk:mockk:1.13.10" 
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
    testImplementation "app.cash.turbine:turbine:0.12.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.10.0"
    testImplementation "com.squareup.okhttp3:okhttp:4.10.0"
    
    // JUnit Jupiter for modern testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.2"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.9.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.9.2"
    
    // Kotlin test coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.1"
    
    // AssertJ for better assertions
    testImplementation "org.assertj:assertj-core:3.24.2"

    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test:rules:1.5.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "app.cash.turbine:turbine:0.12.1"
    androidTestImplementation "org.mockito:mockito-android:5.1.1"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"
    androidTestImplementation "io.mockk:mockk-android:1.13.10"
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = rootProject.group
            artifactId = project.name
            version = rootProject.version

            afterEvaluate {
                from components.release
            }
        }
    }
}
