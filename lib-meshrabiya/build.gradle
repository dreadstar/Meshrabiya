plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'maven-publish'
    id 'jacoco'
}

android {
    namespace = 'com.ustadmobile.meshrabiya'
    compileSdk = 36

    defaultConfig {
        minSdk = 24
        targetSdk = 36
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled = false
            testCoverageEnabled = true
        }
    }
    
    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                testLogging {
                    events "passed", "skipped", "failed"
                    showStandardStreams = true
                }
            }
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled = true
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    kotlinOptions {
        jvmTarget = "21"
    }
}

dependencies {
    api "androidx.core:core-ktx:1.17.0"
    api "androidx.appcompat:appcompat:1.7.1"
    api "com.athaydes.rawhttp:rawhttp-core:2.6.0"
    api "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"
    api "org.jetbrains.kotlinx:kotlinx-serialization-core:1.9.0"
    api "org.jetbrains.kotlin:kotlin-stdlib:2.2.10"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.2"
    api "androidx.fragment:fragment:1.6.2"
    api "androidx.datastore:datastore-preferences:1.1.7"
    api "org.bouncycastle:bcprov-jdk18on:1.75"
    api "org.bouncycastle:bcpkix-jdk18on:1.75"
    api "org.bouncycastle:bcutil-jdk18on:1.75"
    api "com.github.seancfoley:ipaddress:5.5.1"
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.1.5"
    testImplementation "junit:junit:4.13.2"
    testImplementation "io.mockk:mockk:1.13.8"
    testImplementation "androidx.test.ext:junit:1.2.1"
    testImplementation "androidx.test.ext:junit-ktx:1.2.1"
    testImplementation "org.robolectric:robolectric:4.16"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:5.4.0"
    testImplementation "app.cash.turbine:turbine:1.2.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.12.0"
    testImplementation "com.squareup.okhttp3:okhttp:4.12.0"
    testImplementation "androidx.test:core:1.5.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test:1.9.0"
}

// Configure JaCoCo test coverage for Meshrabiya module
task jacocoTestReport(type: JacocoReport) {
    description = "Generates code coverage report for Meshrabiya module unit tests"
    group = "verification"
    
    dependsOn "testDebugUnitTest"
    
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    
    def fileFilter = [
        '**/R.class',
        '**/R$*.class',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*Test*.*',
        'android/**/*.*',
        '**/*$$$serializer.*'
    ]
    
    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"
    def kotlinSrc = "${project.projectDir}/src/main/kotlin"
    
    sourceDirectories.setFrom files([mainSrc, kotlinSrc])
    classDirectories.setFrom files([debugTree])
    executionData.setFrom fileTree(dir: buildDir, includes: [
        "outputs/unit_test_code_coverage/*/test*.exec"
    ])
    
    doLast {
        def htmlReport = reports.html.outputLocation.get().asFile
        if (htmlReport.exists()) {
            println "ðŸ“Š Meshrabiya module coverage report: file://${htmlReport.absolutePath}/index.html"
        }
    }
}
